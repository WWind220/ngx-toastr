{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/lib/toastr-config.ts","webpack:///./src/lib/overlay/overlay-container.ts","webpack:///./src/lib/overlay/overlay.ts","webpack:///./src/lib/portal/portal.ts","webpack:///./src/lib/toast-component.ts","webpack:///./src/lib/toast-injector.ts","webpack:///./src/lib/toastr-service.ts","webpack:///./src/lib/toastr.ts","webpack:///./src/app/pink.toast.ts","webpack:///./src/lib/overlay/overlay-ref.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/lib/portal/dom-portal-host.ts","webpack:///./src/lib/toast-directive.ts","webpack:///./src/lib/toastr-module.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-10 col-sm-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-block\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-5\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"toastTitle\\\">Title</label>\\n                <input [(ngModel)]=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toastTitle\\\" placeholder=\\\"Toast title\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"toastMessage\\\">Message</label>\\n                <textarea [(ngModel)]=\\\"message\\\" rows=\\\"3\\\" class=\\\"form-control\\\" id=\\\"toastMessage\\\" placeholder=\\\"Toast message\\\"></textarea>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"checkbox\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"options.enableHtml\\\"> Enable Html\\n                  </label>\\n                </div>\\n                <div class=\\\"checkbox\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"options.tapToDismiss\\\"> Tap to dismiss\\n                  </label>\\n                </div>\\n                <div class=\\\"checkbox\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"options.closeButton\\\"> Close button\\n                  </label>\\n                </div>\\n                <div class=\\\"checkbox\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"options.preventDuplicates\\\"> Prevent duplicates\\n                  </label>\\n                </div>\\n                <div class=\\\"checkbox\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"options.newestOnTop\\\"> New toasts on top\\n                  </label>\\n                </div>\\n                <div class=\\\"checkbox\\\">\\n                  <label>\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"options.progressBar\\\"> Progress bar\\n                  </label>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"toastTimeout\\\">Timeout</label>\\n                <input [(ngModel)]=\\\"options.timeOut\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toastTimeout\\\" aria-describedby=\\\"toastTimeoutHelp\\\">\\n                <small id=\\\"toastTimeoutHelp\\\" class=\\\"form-text text-muted\\\">0 never expires</small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"maxNumberToasts\\\">Maximum Toasts</label>\\n                <input [(ngModel)]=\\\"toastrService.toastrConfig.maxOpened\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"maxNumberToasts\\\" aria-describedby=\\\"maxNumberToastsHelp\\\">\\n                <small id=\\\"maxNumberToastsHelp\\\" class=\\\"form-text text-muted\\\">0 is no limit</small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"toastExtendedTimeout\\\">Extended Timeout</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"toastrService.toastrConfig.extendedTimeOut\\\" class=\\\"form-control\\\" id=\\\"toastExtendedTimeout\\\">\\n              </div>\\n              <div class=\\\"checkbox\\\">\\n                <label>\\n                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"toastrService.toastrConfig.autoDismiss\\\"> Auto dismiss on max\\n                </label>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <fieldset class=\\\"form-group\\\">\\n                <label>Toast type</label>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"typeRadios\\\" [(ngModel)]=\\\"type\\\" value=\\\"success\\\">\\n                    Success\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"typeRadios\\\" [(ngModel)]=\\\"type\\\" value=\\\"info\\\">\\n                    Info\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"typeRadios\\\" [(ngModel)]=\\\"type\\\" value=\\\"warning\\\">\\n                    Warning\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"typeRadios\\\" [(ngModel)]=\\\"type\\\" value=\\\"error\\\">\\n                    Error\\n                  </label>\\n                </div>\\n              </fieldset>\\n              <fieldset class=\\\"form-group\\\">\\n                <label>Toast position</label>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"positionRadio\\\" [(ngModel)]=\\\"options.positionClass\\\" value=\\\"toast-top-right\\\">\\n                    Top Right\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"positionRadio\\\" [(ngModel)]=\\\"options.positionClass\\\" value=\\\"toast-bottom-right\\\">\\n                    Bottom Right\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"positionRadio\\\" [(ngModel)]=\\\"options.positionClass\\\" value=\\\"toast-bottom-left\\\">\\n                    Bottom Left\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"positionRadio\\\" [(ngModel)]=\\\"options.positionClass\\\" value=\\\"toast-top-left\\\">\\n                    Top Left\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"positionRadio\\\" [(ngModel)]=\\\"options.positionClass\\\" value=\\\"toast-top-full-width\\\">\\n                    Top Full Width\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"positionRadio\\\" [(ngModel)]=\\\"options.positionClass\\\" value=\\\"toast-bottom-full-width\\\">\\n                    Bottom Full Width\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"positionRadio\\\" [(ngModel)]=\\\"options.positionClass\\\" value=\\\"toast-top-center\\\">\\n                    Top Center\\n                  </label>\\n                </div>\\n                <div class=\\\"radio\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"positionRadio\\\" [(ngModel)]=\\\"options.positionClass\\\" value=\\\"toast-bottom-center\\\">\\n                    Bottom Center\\n                  </label>\\n                </div>\\n              </fieldset>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n              <button (click)=\\\"openToast()\\\" class=\\\"btn btn-primary\\\">Open Toast</button>\\n              <button (click)=\\\"clearLastToast()\\\" class=\\\"btn btn-secondary\\\">Clear Last Toast</button>\\n              <button (click)=\\\"clearToasts()\\\" class=\\\"btn btn-secondary\\\">Clear All Toasts</button>\\n              <button (click)=\\\"openPinkToast()\\\" class=\\\"btn btn-pink\\\">Custom Pink Toast</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      Demo using <a href=\\\"https://angular.io/\\\">Angular</a> {{ version.full }}\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 150\n// module chunks = 1","/* tslint:disable:no-inferrable-types */\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { ComponentType } from './portal/portal';\nimport { Toast } from './toast-component';\n\n/**\n * Configuration for an individual toast.\n */\nexport class ToastConfig {\n  /** show close button */\n  closeButton?: boolean = false;\n  /** time to close after a user hovers over toast */\n  extendedTimeOut?: number = 1000;\n  /** show progress bar */\n  progressBar?: boolean = false;\n  /** time to live */\n  timeOut?: number = 5000;\n  /** allow html in message */\n  enableHtml?: boolean = false;\n  toastClass?: string = 'toast';\n  positionClass?: string = 'toast-top-right';\n  titleClass?: string = 'toast-title';\n  messageClass?: string = 'toast-message';\n  /** clicking on toast dismisses it */\n  tapToDismiss?: boolean = true;\n  /** the Angular component to be shown */\n  toastComponent?: ComponentType<any> = Toast;\n  /** Helps show toast from a websocket or from event outside Angular */\n  onActivateTick?: boolean = false;\n\n  constructor(config: ToastConfig = {}) {\n    this.closeButton = config.closeButton || this.closeButton;\n    if (config.extendedTimeOut === 0) {\n      this.extendedTimeOut = config.extendedTimeOut;\n    } else {\n      this.extendedTimeOut = config.extendedTimeOut || this.extendedTimeOut;\n    }\n    this.progressBar = config.progressBar || this.progressBar;\n    if (config.timeOut === 0) {\n      this.timeOut = config.timeOut;\n    } else {\n      this.timeOut = config.timeOut || this.timeOut;\n    }\n    this.enableHtml = config.enableHtml || this.enableHtml;\n\n    this.toastClass = config.toastClass || this.toastClass;\n    this.positionClass = config.positionClass || this.positionClass;\n    this.titleClass = config.titleClass || this.titleClass;\n    this.messageClass = config.messageClass || this.messageClass;\n    if (config.tapToDismiss !== undefined) {\n      this.tapToDismiss = config.tapToDismiss;\n    }\n    this.toastComponent = config.toastComponent || this.toastComponent;\n    this.onActivateTick = config.onActivateTick || this.onActivateTick;\n  }\n}\n\n@Injectable()\nexport class ToastrIconClasses {\n  error?: string;\n  info?: string;\n  success?: string;\n  warning?: string;\n}\n\n/**\n * Global Toast configuration\n */\n@Injectable()\nexport class ToastrConfig extends ToastConfig {\n  /** max toasts opened. Toasts will be queued */\n  maxOpened?: number = 0;\n  /** dismiss current toast when max is reached */\n  autoDismiss?: boolean = false;\n  iconClasses?: ToastrIconClasses = {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning',\n  };\n  /** new toast placement */\n  newestOnTop?: boolean = true;\n  /** block duplicate messages */\n  preventDuplicates?: boolean = false;\n\n  constructor(config: ToastrConfig = {}) {\n    super(config);\n    this.maxOpened = config.maxOpened || this.maxOpened;\n    this.autoDismiss = config.autoDismiss || this.autoDismiss;\n    if (config.iconClasses) {\n      this.iconClasses.error = this.iconClasses.error || config.iconClasses.error;\n      this.iconClasses.info = this.iconClasses.info || config.iconClasses.info;\n      this.iconClasses.success = this.iconClasses.success || config.iconClasses.success;\n      this.iconClasses.warning = this.iconClasses.warning || config.iconClasses.warning;\n    }\n    this.newestOnTop = config.newestOnTop || this.newestOnTop;\n    this.preventDuplicates = config.preventDuplicates || this.preventDuplicates;\n  }\n}\n\nexport class ToastData {\n  toastId: number;\n  optionsOverride: ToastConfig;\n  message: string;\n  title: string;\n  toastType: string;\n  /** Fired on click */\n  onTap: Subject<any>;\n  /** available for use in custom toast */\n  onAction: Subject<any>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/toastr-config.ts","/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nexport class OverlayContainer {\n  private _containerElement: HTMLElement;\n\n  /**\n   * This method returns the overlay container element.  It will lazily\n   * create the element the first time  it is called to facilitate using\n   * the container in non-browser environments.\n   * @returns the container element\n   */\n  getContainerElement(): HTMLElement {\n    if (!this._containerElement) { this._createContainer(); }\n    return this._containerElement;\n  }\n\n  /**\n   * Create the overlay container element, which is simply a div\n   * with the 'cdk-overlay-container' class on the document body.\n   */\n  private _createContainer(): void {\n    const container = document.createElement('div');\n    container.classList.add('overlay-container');\n    document.body.appendChild(container);\n    this._containerElement = container;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/overlay/overlay-container.ts","import { ComponentFactoryResolver, Injectable, ApplicationRef, NgZone } from '@angular/core';\nimport { DomPortalHost } from '../portal/dom-portal-host';\nimport { OverlayRef } from './overlay-ref';\n\nimport { OverlayContainer } from './overlay-container';\nimport { ToastContainerDirective } from '../toast-directive';\n\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\n @Injectable()\n  export class Overlay {\n    private _paneElements: {string?: HTMLElement} = {};\n    constructor(private _overlayContainer: OverlayContainer,\n                private _componentFactoryResolver: ComponentFactoryResolver,\n                private _appRef: ApplicationRef,\n                private _ngZone: NgZone) {}\n  /**\n   * Creates an overlay.\n   * @returns A reference to the created overlay.\n   */\n  create(positionClass: string, overlayContainer?: ToastContainerDirective): OverlayRef {\n    // get existing pane if possible\n    return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n  }\n\n  getPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\n    if (!this._paneElements[positionClass]) {\n      this._paneElements[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n    }\n    return this._paneElements[positionClass];\n  }\n\n  /**\n   * Creates the DOM element for an overlay and appends it to the overlay container.\n   * @returns Newly-created pane element\n   */\n  private _createPaneElement(positionClass: string, overlayContainer?: ToastContainerDirective): HTMLElement {\n    const pane = document.createElement('div');\n    pane.id = 'toast-container';\n    pane.classList.add(positionClass);\n\n    if (!overlayContainer) {\n      this._overlayContainer.getContainerElement().appendChild(pane);\n    } else {\n      overlayContainer.getContainerElement().appendChild(pane);\n    }\n    return pane;\n  }\n\n  /**\n   * Create a DomPortalHost into which the overlay content can be loaded.\n   * @param pane The DOM element to turn into a portal host.\n   * @returns A portal host for the given DOM element.\n   */\n  private _createPortalHost(pane: HTMLElement): DomPortalHost {\n    return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n  }\n\n  /**\n   * Creates an OverlayRef for an overlay in the given DOM element.\n   * @param pane DOM element for the overlay\n   */\n  private _createOverlayRef(pane: HTMLElement): OverlayRef {\n    return new OverlayRef(this._createPortalHost(pane), pane, this._ngZone);\n  }\n}\n\n\n/** Providers for Overlay and its related injectables. */\nexport const OVERLAY_PROVIDERS = [\n  Overlay,\n  OverlayContainer,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/overlay/overlay.ts","import {\n  ViewContainerRef,\n  ComponentRef,\n  Injector\n} from '@angular/core';\n\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> {\n  private _attachedHost: BasePortalHost;\n  /** The type of the component that will be instantiated for attachment. */\n  component: ComponentType<T>;\n\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef: ViewContainerRef;\n\n  /** [Optional] Injector used for the instantiation of the component. */\n  injector: Injector;\n\n  constructor(\n      component: ComponentType<T>,\n      viewContainerRef: ViewContainerRef = null,\n      injector: Injector = null) {\n    this.component = component;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n  }\n\n  /** Attach this portal to a host. */\n  attach(host: BasePortalHost, newestOnTop: boolean): T {\n    this._attachedHost = host;\n    return <T> host.attach(this, newestOnTop);\n  }\n\n  /** Detach this portal from its host */\n  detach(): void {\n    const host = this._attachedHost;\n    this._attachedHost = null;\n    return host.detach();\n  }\n\n  /** Whether this portal is attached to a host. */\n  get isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host: BasePortalHost) {\n    this._attachedHost = host;\n  }\n}\n\n/**\n * Partial implementation of PortalHost that only deals with attaching either a\n * ComponentPortal or a TemplatePortal.\n */\nexport abstract class BasePortalHost {\n  /** The portal currently attached to the host. */\n  private _attachedPortal: ComponentPortal<any>;\n\n  /** A function that will permanently dispose this host. */\n  private _disposeFn: () => void;\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean): any {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T>;\n\n  detach() {\n    if (this._attachedPortal) { this._attachedPortal.setAttachedHost(null); }\n\n    this._attachedPortal = null;\n    if (this._disposeFn != null) {\n      this._disposeFn();\n      this._disposeFn = null;\n    }\n  }\n\n  setDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/portal/portal.ts","import {\n  Component,\n  trigger,\n  state,\n  transition,\n  animate,\n  style,\n  OnDestroy,\n  HostBinding,\n  HostListener,\n  ApplicationRef,\n} from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Subject } from 'rxjs/Subject';\n\nimport { ToastConfig, ToastData } from './toastr-config';\nimport { ToastrService } from './toastr-service';\nimport { ToastRef } from './toast-injector';\n\n@Component({\n  selector: '[toast-component]',\n  template: `\n  <button *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"toast-close-button\">\n    &times;\n  </button>\n  <div *ngIf=\"title\" class=\"{{options.titleClass}}\" [attr.aria-label]=\"title\">\n    {{title}}\n  </div>\n  <div *ngIf=\"message && options.enableHtml\" class=\"{{options.messageClass}}\" [innerHTML]=\"message\">\n  </div>\n  <div *ngIf=\"message && !options.enableHtml\" class=\"{{options.messageClass}}\" [attr.aria-label]=\"message\">\n    {{message}}\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width.%]=\"width\"></div>\n  </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      state('inactive', style({\n        display: 'none',\n        opacity: 0\n      })),\n      state('active', style({ opacity: 1 })),\n      state('removed', style({ opacity: 0 })),\n      transition('inactive => active', animate('300ms ease-in')),\n      transition('active => removed', animate('300ms ease-in')),\n    ]),\n  ],\n})\nexport class Toast implements OnDestroy {\n  toastId: number;\n  message: string | SafeHtml;\n  title: string;\n  options: ToastConfig;\n  /** width of progress bar */\n  width = -1;\n  /** a combination of toast type and options.toastClass */\n  @HostBinding('class') toastClasses = '';\n  /** controls animation */\n  @HostBinding('@flyInOut') state = 'inactive';\n  private timeout: any;\n  private intervalId: any;\n  private hideTime: number;\n  private sub: Subscription;\n  /** listens for click on toast */\n  onTap: Subject<any>;\n  /** listens for click on custom action */\n  onAction: Subject<any>;\n\n  constructor(\n    protected toastrService: ToastrService,\n    public data: ToastData,\n    protected toastRef: ToastRef<any>,\n    protected appRef: ApplicationRef,\n    protected sanitizer: DomSanitizer\n  ) {\n    this.options = data.optionsOverride;\n    this.toastId = data.toastId;\n    this.message = data.message;\n    if (this.message && this.options.enableHtml) {\n      this.message = sanitizer.bypassSecurityTrustHtml(data.message);\n    }\n    this.title = data.title;\n    this.onTap = data.onTap;\n    this.onAction = data.onAction;\n    this.toastClasses = `${data.toastType} ${this.options.toastClass}`;\n    this.options.timeOut = +this.options.timeOut;\n    this.sub = toastRef.afterActivate().subscribe((n) => {\n      this.activateToast();\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n    clearInterval(this.intervalId);\n    clearTimeout(this.timeout);\n  }\n  /**\n   * activates toast and sets timeout\n   */\n  activateToast() {\n    this.state = 'active';\n    if (this.options.timeOut !== 0) {\n      this.timeout = setTimeout(() => {\n        this.remove();\n      }, this.options.timeOut);\n      this.hideTime = new Date().getTime() + this.options.timeOut;\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    if (this.options.onActivateTick) {\n      this.appRef.tick();\n    }\n  }\n  /**\n   * updates progress bar width\n   */\n  updateProgress() {\n    if (this.width === 0) {\n      return;\n    }\n    const now = new Date().getTime();\n    const remaining = this.hideTime - now;\n    this.width = (remaining / this.options.timeOut) * 100;\n    if (this.width <= 0) {\n      this.width = 0;\n    }\n  }\n  remove() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.state = 'removed';\n    this.timeout = setTimeout(() => this.toastrService.remove(this.toastId), 300);\n  }\n  @HostListener('click')\n  tapToast() {\n    if (this.state === 'removed') {\n      return;\n    }\n    this.onTap.next();\n    this.onTap.complete();\n    if (this.options.tapToDismiss) {\n      this.remove();\n    }\n  }\n  @HostListener('mouseenter')\n  stickAround() {\n    if (this.state === 'removed') {\n      return;\n    }\n    clearTimeout(this.timeout);\n    this.options.timeOut = 0;\n    this.hideTime = 0;\n\n    // disable progressBar\n    clearInterval(this.intervalId);\n    this.width = 0;\n  }\n  @HostListener('mouseleave')\n  delayedHideToast() {\n    if (+this.options.extendedTimeOut === 0 || this.state === 'removed') {\n      return;\n    }\n    this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n    this.options.timeOut = +this.options.extendedTimeOut;\n    this.hideTime = new Date().getTime() + this.options.timeOut;\n    this.width = 100;\n    if (this.options.progressBar) {\n      this.intervalId = setInterval(() => this.updateProgress(), 10);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/toast-component.ts","import {Injector} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nimport {OverlayRef} from './overlay/overlay-ref';\nimport {ToastData} from './toastr-config';\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nexport class ToastRef<T> {\n  /** The instance of component opened into the dialog. */\n  componentInstance: T;\n\n  /** Subject for notifying the user that the dialog has finished closing. */\n  private _afterClosed: Subject<any> = new Subject();\n  private _activate: Subject<any> = new Subject();\n\n  constructor(private _overlayRef: OverlayRef) { }\n\n  /**\n   * Close the toast.\n   * @param dialogResult Optional result to return to the toast opener.\n   */\n  close(): void {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._afterClosed.complete();\n  }\n\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate(): Observable<any> {\n    return this._activate.asObservable();\n  }\n}\n\n\n/** Custom injector type specifically for instantiating components with a toast. */\nexport class ToastInjector implements Injector {\n  constructor(\n    private _dialogRef: ToastRef<any>,\n    private _data: ToastData,\n    private _parentInjector: Injector) { }\n\n  get(token: any, notFoundValue?: any): any {\n    if (token === ToastRef) {\n      return this._dialogRef;\n    }\n\n    if (token === ToastData && this._data) {\n      return this._data;\n    }\n\n    return this._parentInjector.get(token, notFoundValue);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/toast-injector.ts","import { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { Overlay } from './overlay/overlay';\nimport { ComponentPortal } from './portal/portal';\nimport { ToastConfig, ToastrConfig, ToastData } from './toastr-config';\nimport { ToastInjector, ToastRef } from './toast-injector';\nimport { ToastContainerDirective } from './toast-directive';\n\nexport interface ActiveToast {\n  toastId?: number;\n  message?: string;\n  portal?: any;\n  toastRef?: ToastRef<any>;\n  onShown?: Observable<any>;\n  onHidden?: Observable<any>;\n  onTap?: Observable<any>;\n  onAction?: Observable<any>;\n}\n\n@Injectable()\nexport class ToastrService {\n  private index = 0;\n  private toasts: any[] = [];\n  private previousToastMessage = '';\n  private currentlyActive = 0;\n  overlayContainer: ToastContainerDirective;\n\n  constructor(\n    public toastrConfig: ToastrConfig,\n    private overlay: Overlay,\n    private _injector: Injector\n  ) { }\n  /** show successful toast */\n  public show(message: string, title?: string, optionsOverride?: ToastConfig, type = '') {\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\n  }\n  /** show successful toast */\n  public success(message: string, title?: string, optionsOverride?: ToastConfig) {\n    const type = this.toastrConfig.iconClasses.success;\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\n  }\n  /** show error toast */\n  public error(message: string, title?: string, optionsOverride?: ToastConfig) {\n    const type = this.toastrConfig.iconClasses.error;\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\n  }\n  /** show info toast */\n  public info(message: string, title?: string, optionsOverride?: ToastConfig) {\n    const type = this.toastrConfig.iconClasses.info;\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\n  }\n  /** show warning toast */\n  public warning(message: string, title?: string, optionsOverride?: ToastConfig) {\n    const type = this.toastrConfig.iconClasses.warning;\n    return this._buildNotification(type, message, title, this.createToastConfig(optionsOverride));\n  }\n  createToastConfig(optionsOverride: ToastConfig): ToastConfig {\n    if (!optionsOverride) {\n      return Object.create(this.toastrConfig);\n    }\n    if (optionsOverride instanceof ToastConfig) {\n      return optionsOverride;\n    }\n    return new ToastConfig(optionsOverride);\n  }\n  /**\n   * Remove all toasts\n   */\n  public clear(toastId?: number) {\n    // Call every toast's remove function\n    for (const toast of this.toasts) {\n      if (toastId !== undefined) {\n        if (toast.toastId === toastId) {\n          toast.portal._component.remove();\n          return;\n        }\n      } else {\n        toast.portal._component.remove();\n      }\n    }\n  }\n  /**\n   * Remove and destroy a single toast by id\n   */\n  public remove(toastId: number) {\n    const { index, activeToast } = this._findToast(toastId);\n    if (!activeToast) {\n      return false;\n    }\n    activeToast.toastRef.close();\n    this.toasts.splice(index, 1);\n    this.currentlyActive = this.currentlyActive - 1;\n    if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n      return false;\n    }\n    if (this.currentlyActive <= this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n      const p = this.toasts[this.currentlyActive].portal;\n      if (p._component.state === 'inactive') {\n        this.currentlyActive = this.currentlyActive + 1;\n        this.toasts[this.currentlyActive].toastRef.activate();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Find toast object by id\n   */\n  private _findToast(toastId: number): { index: number | null, activeToast: ActiveToast | null } {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].toastId === toastId) {\n        return { index: i, activeToast: this.toasts[i] };\n      }\n    }\n    return { index: null, activeToast: null };\n  }\n  /**\n   * Determines if toast message is already shown\n   */\n  private isDuplicate(message: string) {\n    for (let i = 0; i < this.toasts.length; i++) {\n      if (this.toasts[i].message === message) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Creates and attaches toast data to component\n   */\n  private _buildNotification(\n    toastType: string,\n    message: string,\n    title: string,\n    optionsOverride: ToastConfig = Object.create(this.toastrConfig)\n  ) {\n    // max opened and auto dismiss = true\n    if (this.toastrConfig.preventDuplicates && this.isDuplicate(message)) {\n      return;\n    }\n    this.previousToastMessage = message;\n    let keepInactive = false;\n    if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n      keepInactive = true;\n      if (this.toastrConfig.autoDismiss) {\n        this.clear(this.toasts[this.toasts.length - 1].toastId);\n      }\n    }\n    const overlayRef = this.overlay.create(optionsOverride.positionClass, this.overlayContainer);\n    const ins: ActiveToast = {\n      toastId: this.index++,\n      message,\n      toastRef: new ToastRef(overlayRef),\n    };\n    ins.onShown = ins.toastRef.afterActivate();\n    ins.onHidden = ins.toastRef.afterClosed();\n    const data = new ToastData();\n    data.toastId = ins.toastId;\n    data.optionsOverride = optionsOverride;\n    data.message = message;\n    data.title = title;\n    data.toastType = toastType;\n    data.onTap = new Subject();\n    ins.onTap = data.onTap.asObservable();\n    data.onAction = new Subject();\n    ins.onAction = data.onAction.asObservable();\n    const toastInjector = new ToastInjector(ins.toastRef, data, this._injector);\n    const component = new ComponentPortal(optionsOverride.toastComponent, null, toastInjector);\n    ins.portal = overlayRef.attach(component, this.toastrConfig.newestOnTop);\n    if (!keepInactive) {\n      setTimeout(() => {\n        ins.toastRef.activate();\n        this.currentlyActive = this.currentlyActive + 1;\n      });\n    }\n    this.toasts.push(ins);\n    return ins;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/toastr-service.ts","export { BasePortalHost, ComponentPortal } from './portal/portal';\nexport { Overlay } from './overlay/overlay';\nexport { OverlayContainer } from './overlay/overlay-container';\nexport { ToastContainerModule, ToastContainerDirective } from './toast-directive'\nexport { OverlayRef } from './overlay/overlay-ref';\nexport { Toast } from './toast-component';\nexport { ToastrService, ActiveToast } from './toastr-service';\nexport { ToastrConfig, ToastConfig, ToastData } from './toastr-config';\nexport { ToastrModule } from './toastr-module';\nexport { ToastRef } from './toast-injector';\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/toastr.ts","import {\n  Component,\n  trigger,\n  transition,\n  animate,\n  style,\n  keyframes,\n  ApplicationRef,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Toast, ToastData, ToastrService, ToastRef } from 'ngx-toastr';\n\n@Component({\n  selector: '[pink-toast-component]',\n  styles: [`\n    :host {\n      background-color: #FF69B4;\n      position: relative;\n      overflow: hidden;\n      margin: 0 0 6px;\n      padding: 10px 10px 10px 10px;\n      width: 300px;\n      border-radius: 3px 3px 3px 3px;\n      color: #FFFFFF;\n    }\n  `],\n  template: `\n  <div class=\"row\">\n    <div class=\"col-9\">\n      <div *ngIf=\"title\" class=\"{{options.titleClass}}\" [attr.aria-label]=\"title\">\n        {{title}}\n      </div>\n      <div *ngIf=\"message && options.enableHtml\" class=\"{{options.messageClass}}\" [innerHTML]=\"message\"></div>\n      <div *ngIf=\"message && !options.enableHtml\" class=\"{{options.messageClass}}\" [attr.aria-label]=\"message\">\n        {{message}}\n      </div>\n    </div>\n    <div class=\"col-3 text-right\">\n      <a *ngIf=\"!options.closeButton\" class=\"btn btn-pink btn-sm\" (click)=\"action($event)\">\n        {{undoString}}\n      </a>\n      <a *ngIf=\"options.closeButton\" (click)=\"remove()\" class=\"btn btn-pink btn-sm\">\n        close\n      </a>\n    </div>\n  </div>\n  <div *ngIf=\"options.progressBar\">\n    <div class=\"toast-progress\" [style.width.%]=\"width\"></div>\n  </div>\n  `,\n  animations: [\n    trigger('flyInOut', [\n      transition('inactive <=> active', animate('400ms ease-out', keyframes([\n        style({\n          transform: 'translate3d(100%, 0, 0) skewX(-30deg)',\n          opacity: 0,\n        }),\n        style({\n          transform: 'skewX(20deg)',\n          opacity: 1,\n        }),\n        style({\n          transform: 'skewX(-5deg)',\n          opacity: 1,\n        }),\n        style({\n          transform: 'none',\n          opacity: 1,\n        }),\n      ]))),\n      transition('active <=> removed', animate('400ms ease-out', keyframes([\n        style({\n          opacity: 1,\n        }),\n        style({\n          transform: 'translate3d(100%, 0, 0) skewX(30deg)',\n          opacity: 0,\n        }),\n      ]))),\n    ]),\n  ],\n})\nexport class PinkToast extends Toast {\n  // used for demo purposes\n  undoString = 'undo';\n\n  // constructor is only necessary when not using AoT\n  constructor(\n    protected toastrService: ToastrService,\n    public data: ToastData,\n    protected toastRef: ToastRef<any>,\n    protected appRef: ApplicationRef,\n    protected sanitizer: DomSanitizer\n  ) {\n    super(toastrService, data, toastRef, appRef, sanitizer);\n  }\n\n  action(event: Event) {\n    event.stopPropagation();\n    this.undoString = 'undid';\n    this.onAction.next(this.undoString);\n    this.onAction.complete();\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pink.toast.ts","import {NgZone} from '@angular/core';\nimport {BasePortalHost, ComponentPortal} from '../portal/portal';\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nexport class OverlayRef {\n  constructor(\n      private _portalHost: BasePortalHost,\n      private _pane: HTMLElement,\n      private _ngZone: NgZone) { }\n\n  attach(portal: ComponentPortal<any>, newestOnTop: boolean): any {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/overlay/overlay-ref.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 78;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 78\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, VERSION } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { ToastrConfig, ToastrService } from 'ngx-toastr';\n\nimport { PinkToast } from './pink.toast';\n\nconst quotes = [\n  {\n    title: 'Title',\n    message: 'Message'\n  },\n  {\n    title: '😃',\n    message: 'Supports Emoji'\n  },\n  {\n    title: null,\n    message: 'My name is Inigo Montoya. You killed my father. Prepare to die!',\n  },\n  {\n    title: null,\n    message: 'Titles are not always needed'\n  },\n  {\n    title: 'Title only 👊',\n    message: null,\n  },\n  {\n    title: '',\n    message: `Supports Angular ${VERSION.full}`,\n  },\n];\nconst types = ['success', 'error', 'info', 'warning'];\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  options: ToastrConfig;\n  title = '';\n  type = types[0];\n  message = '';\n  version = VERSION;\n  private lastInserted: number[] = [];\n\n  constructor(public toastrService: ToastrService) {\n    // sync options to toastrservice\n    // this sets the options in the demo\n    this.options = this.toastrService.toastrConfig;\n  }\n  openToast() {\n    // Clone current config so it doesn't change when ngModel updates\n    let m = this.message;\n    let t = this.title;\n    if (!this.title.length && !this.message.length) {\n      const randomMessage = quotes[_.random(0, quotes.length - 1)];\n      m = randomMessage.message;\n      t = randomMessage.title;\n    }\n    const opt = _.cloneDeep(this.options);\n    const inserted = this.toastrService[this.type](m, t, opt);\n    if (inserted) {\n      this.lastInserted.push(inserted.toastId);\n    }\n    return inserted;\n  }\n  openPinkToast() {\n    const opt = _.cloneDeep(this.options);\n    opt.toastComponent = PinkToast;\n    opt.toastClass = '';\n    let m = this.message;\n    let t = this.title;\n    if (!this.title.length && !this.message.length) {\n      const randomMessage = quotes[_.random(0, quotes.length - 1)];\n      m = randomMessage.message;\n      t = randomMessage.title;\n    }\n    const inserted = this.toastrService.show(m, t, opt);\n    if (inserted) {\n      this.lastInserted.push(inserted.toastId);\n    }\n    return inserted;\n  }\n  clearToasts() {\n    this.toastrService.clear();\n  }\n  clearLastToast() {\n    this.toastrService.clear(this.lastInserted.pop());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppComponent } from './app.component';\nimport { PinkToast } from './pink.toast';\n// import { ToastContainerModule } from '../lib/toast-directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PinkToast,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    // ToastContainerModule.forRoot(),\n  ],\n  entryComponents: [PinkToast],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  ApplicationRef,\n} from '@angular/core';\nimport { BasePortalHost, ComponentPortal } from './portal';\n\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n  constructor(\n      private _hostDomElement: Element,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _appRef: ApplicationRef) {\n    super();\n  }\n\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>, newestOnTop: boolean): ComponentRef<T> {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n    } else {\n      this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n    }\n\n    return componentRef;\n  }\n\n  /** Gets the root HTMLElement for an instantiated component. */\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/portal/dom-portal-host.ts","import { NgModule, ModuleWithProviders, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[toastContainer]',\n  exportAs: 'toastContainer',\n})\nexport class ToastContainerDirective {\n  constructor(private el: ElementRef) {}\n  getContainerElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n@NgModule({\n  exports: [ToastContainerDirective],\n  declarations: [ToastContainerDirective],\n})\nexport class ToastContainerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ToastContainerModule,\n      providers: []\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/toast-directive.ts","import { NgModule, ModuleWithProviders, OpaqueToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Toast } from './toast-component';\nimport { ToastrService } from './toastr-service';\nimport { ToastrConfig } from './toastr-config';\nimport { OverlayContainer } from './overlay/overlay-container';\nimport { Overlay } from './overlay/overlay';\n\nexport const TOAST_CONFIG = new OpaqueToken('ToastConfig');\n\nexport function provideToastrConfig(config: ToastrConfig) {\n  return new ToastrConfig(config);\n}\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [Toast],\n  declarations: [Toast],\n  entryComponents: [Toast],\n})\nexport class ToastrModule {\n  static forRoot(config?: ToastrConfig): ModuleWithProviders {\n    return {\n      ngModule: ToastrModule,\n      providers: [\n        { provide: TOAST_CONFIG, useValue: config },\n        { provide: ToastrConfig, useFactory: provideToastrConfig, deps: [TOAST_CONFIG] },\n        OverlayContainer,\n        Overlay,\n        ToastrService\n      ]\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/toastr-module.ts"],"sourceRoot":""}